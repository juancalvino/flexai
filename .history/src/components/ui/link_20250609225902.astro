---
interface Props {
  href: string;
  size?: "md" | "lg";
  block?: boolean;
  style?: "outline" | "primary" | "inverted" | "muted";
  class?: string;
  [x: string]: any;
}

const {
  href,
  block,
  size = "lg",
  style = "primary",
  class: className,
  ...rest
} = Astro.props;

const sizes = {
  lg: "px-5 py-2.5",
  md: "px-4 py-2",
};

const styles = {
  outline: "bg-white border-2 border-brand-blue-600 hover:bg-brand-blue-600 hover:text-white text-brand-blue-600 font-semibold",
  primary: "bg-brand-blue-600 text-white hover:text-white hover:bg-brand-blue-700 border-2 border-transparent font-semibold",
  inverted: "bg-brand-yellow-500 text-brand-blue-900 hover:bg-brand-yellow-600 border-2 border-transparent font-semibold",
  muted: "bg-neutral-100 hover:bg-neutral-200 text-neutral-700 border-2 border-transparent",
};
---

<a
  href={href}
  {...rest}
  class:list={[
    "rounded-xl text-center transition-all duration-300 focus-visible:ring-2 ring-offset-2 ring-brand-blue-500 hover:scale-105 relative group",
    style === "primary" && "overflow-hidden",
    block && "w-full",
    sizes[size],
    styles[style],
    className,
  ]}
>
  {style === "primary" && (
    <!-- Efecto de brillo para botones primary -->
    <div class="absolute inset-0 bg-gradient-to-r from-transparent via-white/70 to-transparent -translate-x-full group-hover:translate-x-full transition-transform duration-800 ease-out"></div>
  )}
  <span class={style === "primary" ? "relative z-10 text-white flex items-center justify-center gap-1" : ""}>
    <slot />
  </span>
</a>
