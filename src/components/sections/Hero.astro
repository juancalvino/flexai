---
import Button from "../ui/button.astro";
import Badge from "../ui/Badge.astro";
import Container from "../ui/container.astro";

export interface Props {
  badge?: string;
  title: string;
  subtitle?: string;
  primaryCTA?: {
    text: string;
    href: string;
  };
  secondaryCTA?: {
    text: string;
    href: string;
  };
  image?: {
    src: string;
    alt: string;
  };
}

const { badge, title, subtitle, primaryCTA, secondaryCTA, image } = Astro.props;
---

<section class="relative overflow-hidden bg-gradient-to-br from-neutral-50 to-brand-yellow-50 pt-16 pb-20 md:pt-24 md:pb-28">
  <!-- Background decoration -->
  <div class="absolute inset-0 overflow-hidden">
    <div class="absolute -top-40 -right-40 w-80 h-80 bg-brand-yellow-200 rounded-full opacity-20 blur-3xl"></div>
    <div class="absolute -bottom-40 -left-40 w-80 h-80 bg-brand-blue-200 rounded-full opacity-20 blur-3xl"></div>
  </div>

  <Container>
    <div class="relative grid lg:grid-cols-2 gap-12 items-center">
      <!-- Content -->
      <div class="text-center lg:text-left">
        {badge && (
          <div class="animate-slide-down mb-6">
            <Badge variant="primary" size="lg" rounded>
              {badge}
            </Badge>
          </div>
        )}
        
        <h1 class="font-display text-4xl md:text-5xl lg:text-6xl font-bold text-neutral-900 mb-6 animate-slide-up">
          <Fragment set:html={title} />
        </h1>
        
        {subtitle && (
          <p class="text-lg md:text-xl text-neutral-600 mb-8 max-w-2xl mx-auto lg:mx-0 animate-slide-up" style="animation-delay: 0.1s">
            {subtitle}
          </p>
        )}
        
        <div class="flex flex-col sm:flex-row gap-4 justify-center lg:justify-start animate-slide-up" style="animation-delay: 0.2s">
          {primaryCTA && (
            <Button
              href={primaryCTA.href}
              size="lg"
              variant="primary"
              class="group"
            >
              {primaryCTA.text}
              <svg
                class="w-5 h-5 ml-2 group-hover:translate-x-1 transition-transform"
                fill="none"
                stroke="currentColor"
                viewBox="0 0 24 24"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M13 7l5 5m0 0l-5 5m5-5H6"
                />
              </svg>
            </Button>
          )}
          
          {secondaryCTA && (
            <Button
              href={secondaryCTA.href}
              size="lg"
              variant="outline"
            >
              {secondaryCTA.text}
            </Button>
          )}
        </div>
      </div>
      
      <!-- Image -->
      {image && (
        <div class="relative animate-float">
          <div class="absolute inset-0 bg-gradient-to-r from-brand-yellow-400 to-brand-blue-400 rounded-3xl blur-2xl opacity-20"></div>
          <img
            src={image.src}
            alt={image.alt}
            class="relative w-full h-auto rounded-3xl shadow-2xl"
            loading="eager"
          />
        </div>
      )}
    </div>
  </Container>
</section>

<style>
  @keyframes slide-up {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
  
  @keyframes slide-down {
    from {
      opacity: 0;
      transform: translateY(-20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
  
  .animate-slide-up {
    animation: slide-up 0.6s ease-out forwards;
    opacity: 0;
  }
  
  .animate-slide-down {
    animation: slide-down 0.6s ease-out forwards;
    opacity: 0;
  }
</style>